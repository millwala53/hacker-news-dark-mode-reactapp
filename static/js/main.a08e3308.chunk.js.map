{"version":3,"sources":["services/Api.js","services/hackerNewsApi.js","store/story/actions.js","styles/palette.js","utils/getSiteHostname.js","utils/ArticleLink.js","components/ListItem/styles.js","components/ListItem/index.js","components/List/styles.js","components/List/index.js","components/Loader/styles.js","components/Loader/index.js","components/App/styles.js","styles/mediaQueries.js","components/App/App.js","store/story/selectors.js","components/App/index.js","serviceWorker.js","styles/globals.js","store/app/actions.js","store/app/reducer.js","store/story/reducer.js","store/reducer.js","store/middleware.js","store/index.js","index.js"],"names":["API_ROOT","process","URL","TIMEOUT","HEADERS","Accept","client","baseURL","timeout","headers","auth","axios","create","interceptors","response","use","this","handleSuccess","handleError","error","Promise","reject","path","get","then","data","payload","post","put","patch","delete","hackerNewsAPI","id","ids","page","limit","begin","end","getPageSlice","storyPromises","items","slice","getPageValues","map","getStory","all","NS","actionTypes","FETCH_STORY_IDS_REQUEST","FETCH_STORY_IDS_SUCCESS","FETCH_STORY_IDS_FAILURE","FETCH_STORIES_REQUEST","FETCH_STORIES_SUCCESS","FETCH_STORIES_FAILURE","action","type","actions","fetchStoryIds","dispatch","getTopStoryIds","storyIds","fetchStories","catch","err","getStoriesbyPage","stories","colorsDark","background","backgroundSecondary","text","textSecondary","border","getSiteHostname","siteUrl","hostname","includes","url","parse","split","HN_ROOT","HN_ITEM","HN_USER","getArticleLink","commentUrl","Item","styled","li","theme","Title","h3","Host","span","ExternalLink","a","Description","div","CommentLink","LINK_REL","ListItem","by","kids","score","title","time","site","link","userUrl","href","rel","target","moment","fromNow","length","ListWrapper","ul","props","List","story","key","blink","keyframes","Animation","Loader","Wrapper","h1","App","isFetching","console","log","fetchStoriesFirstPage","hasMoreStories","dataLength","next","hasMore","loader","style","height","overflow","Component","hasMoreStoriesSelector","createSelector","state","connect","Boolean","window","location","match","GlobalStyles","createGlobalStyle","SET_THEME","app","rootReducer","combineReducers","middlewareList","push","thunk","middleware","compose","applyMiddleware","configuration","initialState","createStore","reducer","res","store","configureStore","ReactDOM","render","document","getElementById","renderApp","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a08e3308.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\n// Default API will be your root\r\nconst API_ROOT = process.env.URL || \"http://localhost:3000/\";\r\nconst TIMEOUT = 20000;\r\nconst HEADERS = {\r\n  \"Content-Type\": \"application/json\",\r\n  Accept: \"application/json\"\r\n};\r\n\r\nclass ApiService {\r\n  constructor({\r\n    baseURL = API_ROOT,\r\n    timeout = TIMEOUT,\r\n    headers = HEADERS,\r\n    auth\r\n  }) {\r\n    const client = axios.create({\r\n      baseURL,\r\n      timeout,\r\n      headers,\r\n      auth\r\n    });\r\n\r\n    client.interceptors.response.use(this.handleSuccess, this.handleError);\r\n    this.client = client;\r\n  }\r\n\r\n  handleSuccess(response) {\r\n    return response;\r\n  }\r\n\r\n  handleError(error) {\r\n    return Promise.reject(error);\r\n  }\r\n\r\n  get(path) {\r\n    return this.client.get(path).then(response => response.data);\r\n  }\r\n\r\n  post(path, payload) {\r\n    return this.client.post(path, payload).then(response => response.data);\r\n  }\r\n\r\n  put(path, payload) {\r\n    return this.client.put(path, payload).then(response => response.data);\r\n  }\r\n\r\n  patch(path, payload) {\r\n    return this.client.patch(path, payload).then(response => response.data);\r\n  }\r\n\r\n  delete(path) {\r\n    return this.client.delete(path).then(response => response.data);\r\n  }\r\n}\r\n\r\nexport default ApiService;\r\n","import ApiService from \"./Api\";\r\n\r\nconst BASE_URL = \"https://hacker-news.firebaseio.com/v0\";\r\nconst client = new ApiService({ baseURL: BASE_URL });\r\n\r\nconst JSON_Query = \".json?print=pretty\";\r\nconst PAGE_LIMIT = 20;\r\nconst getPageSlice = (limit, page = 0) => ({\r\n  begin: page * limit,\r\n  end: (page + 1) * limit\r\n});\r\nconst getPageValues = ({ begin, end, items }) => items.slice(begin, end);\r\nconst hackerNewsAPI = {};\r\nhackerNewsAPI.getTopStoryIds = () => client.get(`/topstories${JSON_Query}`);\r\nhackerNewsAPI.getStory = id => client.get(`/item/${id}${JSON_Query}`);\r\nhackerNewsAPI.getStoriesbyPage = (ids, page) => {\r\n  const { begin, end } = getPageSlice(PAGE_LIMIT, page);\r\n  const activeIds = getPageValues({ begin, end, items: ids });\r\n  const storyPromises = activeIds.map(id => hackerNewsAPI.getStory(id));\r\n  return Promise.all(storyPromises);\r\n};\r\n\r\nexport default hackerNewsAPI;\r\n","import hackerNewsAPI from \"../../services/hackerNewsApi\";\r\n\r\nconst NS = \"@hnClone/story\";\r\n\r\nexport const actionTypes = {\r\n  FETCH_STORY_IDS_REQUEST: `${NS}/FETCH_STORY_IDS_REQUEST`,\r\n  FETCH_STORY_IDS_SUCCESS: `${NS}/FETCH_STORY_IDS_SUCCESS`,\r\n  FETCH_STORY_IDS_FAILURE: `${NS}/FETCH_STORY_IDS_FAILURE`,\r\n  FETCH_STORIES_REQUEST: `${NS}/FETCH_STORIES_REQUEST`,\r\n  FETCH_STORIES_SUCCESS: `${NS}/FETCH_STORIES_SUCCESS`,\r\n  FETCH_STORIES_FAILURE: `${NS}/FETCH_STORIES_FAILURE`\r\n};\r\n\r\nconst action = (type, payload) => ({ type, payload });\r\n\r\nconst actions = {\r\n  fetchStoryIds: (payload = {}) => {\r\n    return dispatch => {\r\n      dispatch(action(actionTypes.FETCH_STORY_IDS_REQUEST), payload);\r\n\r\n      return hackerNewsAPI\r\n        .getTopStoryIds()\r\n        .then(storyIds => {\r\n          dispatch(action(actionTypes.FETCH_STORY_IDS_SUCCESS, { storyIds }));\r\n          dispatch(actions.fetchStories({ storyIds, page: 0 }));\r\n          return storyIds;\r\n        })\r\n        .catch(err => {\r\n          dispatch(action(actionTypes.FETCH_STORY_IDS_FAILURE, err));\r\n        });\r\n    };\r\n  },\r\n\r\n  fetchStories: (payload = {}) => {\r\n    return dispatch => {\r\n      dispatch(action(actionTypes.FETCH_STORIES_REQUEST, payload));\r\n      const { storyIds, page } = payload;\r\n      return hackerNewsAPI\r\n        .getStoriesbyPage(storyIds, page)\r\n        .then(stories => {\r\n          dispatch(action(actionTypes.FETCH_STORIES_SUCCESS, { stories }));\r\n        })\r\n        .catch(err => {\r\n          dispatch(action(actionTypes.FETCH_STORIES_FAILURE, { err }));\r\n        });\r\n    };\r\n  }\r\n};\r\n\r\nexport default actions;\r\n","export const colorsDark = {\r\n    background: '#272727',\r\n    backgroundSecondary: '#393C3E',\r\n    text: '#bfbebe',\r\n    textSecondary: '#848886',\r\n    border: '#272727',\r\n  };\r\n  \r\n  export const colorsLight = {\r\n    background: '#EAEAEA',\r\n    backgroundSecondary: '#F8F8F8',\r\n    text: '#848886',\r\n    textSecondary: '#aaaaaa',\r\n    border: '#EAEAEA',\r\n  };","import url from \"url\";\r\n\r\nconst getSiteHostname = siteUrl => {\r\n  let hostname = \"\";\r\n\r\n  if (siteUrl) {\r\n    if (!siteUrl.includes(\"//\")) {\r\n      siteUrl = `http://${siteUrl}`;\r\n    }\r\n\r\n    hostname = url.parse(siteUrl).hostname;\r\n  }\r\n\r\n  if (hostname.includes(\"www.\")) {\r\n    hostname = hostname.split(\"www.\")[1];\r\n  }\r\n\r\n  return hostname;\r\n};\r\n\r\nexport default getSiteHostname;\r\n","const HN_ROOT = \"https://news.ycombinator.com\";\r\nexport const HN_ITEM = `${HN_ROOT}/item?id=`;\r\nexport const HN_USER = `${HN_ROOT}/user?id=`;\r\n\r\nconst getArticleLink = ({ url, id }) => {\r\n  const commentUrl = `${HN_ITEM}${id}`;\r\n  const link = !!url ? url : commentUrl;\r\n  return link;\r\n};\r\n\r\nexport default getArticleLink;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Item = styled.li`\r\n  border-bottom: 1px solid ${({ theme }) => theme.border};\r\n  padding: 14px 24px;\r\n  &:last-child {\r\n    border-bottom: none;\r\n  }\r\n`;\r\n\r\nexport const Title = styled.h3`\r\n  color: ${({ theme }) => theme.text};\r\n  margin-top: 0;\r\n  margin-bottom: 6px;\r\n  font-weight: 400;\r\n  font-size: 16px;\r\n  letter-spacing: 0.4px;\r\n`;\r\n\r\nexport const Host = styled.span`\r\n  color: ${({ theme }) => theme.textSecondary};\r\n  font-size: 12px;\r\n`;\r\n\r\nexport const ExternalLink = styled.a`\r\n  color: ${({ theme }) => theme.text};\r\n  display: flex;\r\n  width: 100%;\r\n  height: 100%;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  text-decoration: none;\r\n`;\r\n\r\nexport const Description = styled.div`\r\n  font-size: 14px;\r\n  color: ${({ theme }) => theme.textSecondary};\r\n`;\r\n\r\nexport const CommentLink = styled.a`\r\n  color: ${({ theme }) => theme.textSecondary};\r\n  &:visited {\r\n    color: ${({ theme }) => theme.textSecondary};\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\nimport getSiteHostname from \"utils/getSiteHostname\";\r\nimport getArticleLink, { HN_USER, HN_ITEM } from \"utils/ArticleLink\";\r\nimport {\r\n  Item,\r\n  Title,\r\n  Host,\r\n  ExternalLink,\r\n  Description,\r\n  CommentLink\r\n} from \"./styles\";\r\nconst LINK_REL = \"noopener noreferrer nofollow\";\r\nconst ListItem = ({ by, kids = [], score, url, title, id, type, time }) => {\r\n  const site = getSiteHostname(url) || \"new.ycombinator.com\";\r\n  const link = getArticleLink({ url, id });\r\n  const commentUrl = `${HN_ITEM}${id}`;\r\n  const userUrl = `${HN_USER}${by}`;\r\n  return (\r\n    <Item>\r\n      <ExternalLink href={link} rel={LINK_REL} target=\"_blank\">\r\n        <Title>\r\n          {title}\r\n          <Host> ({site})</Host>\r\n        </Title>\r\n      </ExternalLink>\r\n      <Description>\r\n        {score} points by{\" \"}\r\n        <CommentLink href={userUrl} rel={LINK_REL} target=\"_blank\">\r\n          {by}\r\n        </CommentLink>\r\n        {moment().fromNow(time)}\r\n        {\" | \"}\r\n        <CommentLink href={commentUrl} rel={LINK_REL} target=\"_blank\">\r\n          {kids.length} Comments\r\n        </CommentLink>\r\n      </Description>\r\n    </Item>\r\n  );\r\n};\r\n\r\nexport default ListItem;\r\n","import styled from \"styled-components\";\r\n\r\nexport const ListWrapper = styled.ul`\r\n  background-color: ${props => props.theme.backgroundSecondary};\r\n  border-radius: 4px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  margin-bottom: 20px;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n","import React from \"react\";\r\nimport ListItem from \"components/ListItem\";\r\n\r\nimport { ListWrapper } from \"./styles\";\r\n\r\nconst List = ({ stories }) => (\r\n  <ListWrapper>\r\n    {stories.map(story => {\r\n      return <ListItem key={story.id} {...story} />;\r\n    })}\r\n  </ListWrapper>\r\n);\r\n\r\nexport default List;\r\n","import styled, { keyframes } from \"styled-components\";\r\n\r\nconst blink = keyframes`\r\n  /**\r\n  * At the start of the animation the dot\r\n  * has an opacity of .2\r\n  */\r\n  0% {\r\n    opacity: .2;\r\n  }\r\n  /**\r\n  * At 20% the dot is fully visible and\r\n  * then fades out slowly\r\n  */\r\n  20% {\r\n    opacity: 1;\r\n  }\r\n  /**\r\n  * Until it reaches an opacity of .2 and\r\n  * the animation can start again\r\n  */\r\n  100% {\r\n    opacity: .2;\r\n  }\r\n`;\r\n\r\nexport const Animation = styled.div`\r\n  text-align: center;\r\n  span {\r\n    color: ${({ theme }) => theme.textSecondary};\r\n    display: inline-block;\r\n    margin-left: 4px;\r\n    margin-right: 4px;\r\n    font-size: 80px;\r\n    line-height: 0.1;\r\n    /**\r\n    * Use the blink animation, which is defined above\r\n    */\r\n    animation-name: ${blink};\r\n    /**\r\n    * The total time of animation\r\n    */\r\n    animation-duration: 1s;\r\n    /**\r\n    * It will repeat itself forever\r\n    */\r\n    animation-iteration-count: infinite;\r\n    /**\r\n    * This makes sure that the starting style (opacity: .2)\r\n    * of the animation is applied before the animation starts.\r\n    * Otherwise we would see a short flash or would have\r\n    * to set the default styling of the dots to the same\r\n    * as the animation. Same applies for the ending styles.\r\n    */\r\n    animation-fill-mode: both;\r\n  }\r\n  span:nth-child(2) {\r\n    animation-delay: 0.2s;\r\n  }\r\n  span:nth-child(3) {\r\n    animation-delay: 0.4s;\r\n  }\r\n`;\r\n","import React from \"react\";\r\n\r\nimport { Animation } from \"./styles\";\r\n\r\nconst Loader = () => (\r\n  <Animation>\r\n    <span>.</span>\r\n    <span>.</span>\r\n    <span>.</span>\r\n  </Animation>\r\n);\r\n\r\nexport default Loader;\r\n","import styled from \"styled-components\";\r\nimport { tablet } from \"styles/mediaQueries\";\r\nexport const Wrapper = styled.div`\r\n  width: 85%;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  height: 100%;\r\n  overflow: hidden;\r\n  padding-bottom: 200px;\r\n\r\n  ${tablet} {\r\n    width: 96%;\r\n  }\r\n`;\r\n\r\nexport const Title = styled.h1`\r\n  color: ${props => props.theme.textSecondary};\r\n  font-size: 20px;\r\n  font-weight: 00;\r\n  margin-bottom: 20px;\r\n  margin-top: 20px;\r\n`;\r\n","export const mobile = \"@media only screen and  (max-width: 480px)\";\r\nexport const tablet = \"@media only screen and  (max-width: 768px)\";\r\nexport const monitor = \"@media only screen and  (min-width: 1400px)\";\r\n","import React, { Component } from \"react\";\r\nimport InifiniteScroll from \"react-infinite-scroll-component\";\r\nimport { ThemeProvider } from \"styled-components\";\r\nimport { colorsDark } from \"styles/palette\";\r\nimport List from \"components/List\";\r\nimport Loader from \"components/Loader\";\r\nimport { Wrapper, Title } from \"./styles\";\r\nclass App extends Component {\r\n  componentDidMount() {\r\n    this.props.fetchStoriesFirstPage();\r\n  }\r\n  fetchStories = () => {\r\n    const { storyIds, page, fetchStories, isFetching } = this.props;\r\n    console.log(\"fetych stories\", this.props);\r\n    if (!isFetching) {\r\n      fetchStories({ storyIds, page });\r\n    }\r\n  };\r\n  render() {\r\n    const { stories, hasMoreStories } = this.props;\r\n    return (\r\n      <ThemeProvider theme={colorsDark}>\r\n        <div>\r\n          <Wrapper>\r\n            <Title>Hacker News Reader </Title>\r\n            <InifiniteScroll\r\n              dataLength={stories.length}\r\n              next={this.fetchStories}\r\n              hasMore={hasMoreStories}\r\n              loader={<Loader></Loader>}\r\n              style={{\r\n                height: \"100%\",\r\n                overflow: \"visible\"\r\n              }}\r\n            >\r\n              <List stories={stories} />\r\n            </InifiniteScroll>\r\n          </Wrapper>\r\n        </div>\r\n      </ThemeProvider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import { createSelector } from \"reselect\";\r\n\r\nconst storyIdsSelector = state => state.story.storyIds;\r\nconst storiesSelector = state => state.story.stories;\r\n\r\nexport const hasMoreStoriesSelector = createSelector(\r\n  storyIdsSelector,\r\n  storiesSelector,\r\n  (storyIds, stories) => storyIds.length > stories.length\r\n);\r\n","import { connect } from \"react-redux\";\r\nimport actions from \"store/story/actions\";\r\nimport App from \"./App\";\r\nimport { hasMoreStoriesSelector } from \"store/story/selectors\";\r\n\r\nconst mapStateToProps = state => ({\r\n  stories: state.story.stories,\r\n  page: state.story.page,\r\n  storyIds: state.story.storyIds,\r\n  isFetching: state.story.isFetching,\r\n  hasMoreStories: hasMoreStoriesSelector(state)\r\n});\r\n\r\nconst mapDispatchProps = dispatch => ({\r\n  fetchStoriesFirstPage: () => dispatch(actions.fetchStoryIds()),\r\n  fetchStories: ({ storyIds, page }) => {\r\n    dispatch(actions.fetchStories({ storyIds, page }));\r\n  }\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchProps\r\n)(App);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { createGlobalStyle } from \"styled-components\";\r\nimport { colorsDark } from \"./palette\";\r\nconst GlobalStyles = createGlobalStyle`\r\n    * {\r\n      box-sizing: border-box;\r\n    }\r\n    html, body {\r\n      font-family: Lato,Helvetica-Neue,Helvetica,Arial,sans-serif;\r\n      width: 100vw;\r\n      overflow-x: hidden;\r\n      margin: 0;\r\n      padding: 0;\r\n      min-height: 100vh;\r\n      background-color: ${colorsDark.background}\r\n    }\r\n    ul {\r\n      list-style: none;\r\n      padding: 0;\r\n    }\r\n    a {\r\n      text-decoration: none;\r\n      &:visited {\r\n        color: inherit;\r\n      }\r\n    }\r\n  `;\r\n\r\nexport default GlobalStyles;\r\n","const NS = \"@hnClone/app\";\r\n\r\nexport const actionTypes = {\r\n  SET_THEME: `${NS}/SET_THEME`\r\n};\r\n\r\nconst actions = {\r\n  setTheme: (payload = {}) => ({ type: actionTypes.SET_THEME, payload })\r\n};\r\n\r\nexport default actions;\r\n","import { actionTypes } from \"./actions\";\r\n\r\nconst getInitialState = () => ({\r\n  theme: \"dark\"\r\n});\r\n\r\nconst app = (state = getInitialState(), { type, payload }) => {\r\n  switch (type) {\r\n    case actionTypes.SET_THEME:\r\n      return {\r\n        ...state,\r\n        ...payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default app;\r\n","import { actionTypes } from \"./actions\";\r\nconst getInitialState = () => ({\r\n  storyIds: [],\r\n  stories: [],\r\n  page: 0,\r\n  isFetching: false,\r\n  error: \"\"\r\n});\r\n\r\nconst story = (state = getInitialState(), { type, payload }) => {\r\n  switch (type) {\r\n    case actionTypes.FETCH_STORY_IDS_REQUEST:\r\n    case actionTypes.FETCH_STORIES_REQUEST:\r\n      return {\r\n        ...state,\r\n        isFetching: true\r\n      };\r\n    case actionTypes.FETCH_STORY_IDS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        ...payload\r\n      };\r\n    case actionTypes.FETCH_STORIES_SUCCESS:\r\n      return {\r\n        ...state,\r\n        stories: [...state.stories, ...payload.stories],\r\n        page: state.page + 1,\r\n        isFetching: false\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default story;\r\n","import { combineReducers } from \"redux\";\r\nimport app from \"./app/reducer\";\r\nimport story from \"./story/reducer\";\r\n\r\nconst rootReducer = combineReducers({ app, story });\r\n\r\nexport default rootReducer;\r\n","import { applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { createLogger } from \"redux-logger\";\r\n\r\nconst isProd = process.env.NODE_ENV === \"production\";\r\nconst middlewareList = [];\r\n\r\nmiddlewareList.push(thunk);\r\n\r\nif (!isProd) {\r\n  middlewareList.push(createLogger());\r\n}\r\n\r\nconst middleware = compose(applyMiddleware(...middlewareList));\r\nexport default middleware;\r\n","import { createStore } from \"redux\";\r\nimport reducer from \"./reducer\";\r\nimport middleware from \"./middleware\";\r\n\r\nconst configuration = initialState => {\r\n  const store = createStore(reducer, initialState, middleware);\r\n  return store;\r\n};\r\n\r\nexport default configuration;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport GlobalStyles from \"styles/globals\";\nimport { Provider } from \"react-redux\";\nimport configureStore from \"store\";\nimport hackerNewsAPI from \"services/hackerNewsApi\";\n\nhackerNewsAPI.getTopStoryIds().then(res => {\n  console.log(\"res\", res);\n});\nconst renderApp = () => {\n  const initialState = {};\n  const store = configureStore(initialState);\n  store.dispatch({ type: \"@hnClone/@@INIT\" });\n  ReactDOM.render(\n    <Provider store={store}>\n      <GlobalStyles />\n      <App />\n    </Provider>,\n    document.getElementById(\"root\")\n  );\n};\nrenderApp();\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}